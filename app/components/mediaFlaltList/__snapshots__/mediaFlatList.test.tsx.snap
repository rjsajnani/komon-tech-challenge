// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MediaFlatList /> renders image  type correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {},
        {
          "dataSet": {},
        },
        {},
      ]
    }
    data={
      [
        {
          "postId": 1,
          "postImage": "string",
          "type": "img",
        },
      ]
    }
    dataSet={{}}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={{}}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          dataSet={{}}
          style={
            {
              "borderColor": "#e5e7eb",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginBottom": 8,
              "marginLeft": 8,
              "marginRight": 8,
              "marginTop": 8,
              "maxWidth": "100%",
              "overflow": "hidden",
            }
          }
        >
          <Image
            accessibilityLabel="/"
            alt="/"
            dataSet={{}}
            onError={[Function]}
            source={
              {
                "uri": "string",
              }
            }
            style={
              {
                "height": 256,
                "maxWidth": "100%",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;

exports[`<MediaFlatList /> renders video type correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {},
        {
          "dataSet": {},
        },
        {},
      ]
    }
    data={
      [
        {
          "postId": 1,
          "postImage": "string",
          "type": "img",
        },
      ]
    }
    dataSet={{}}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={{}}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          dataSet={{}}
          style={
            {
              "borderColor": "#e5e7eb",
              "borderRadius": 8,
              "borderWidth": 1,
              "marginBottom": 8,
              "marginLeft": 8,
              "marginRight": 8,
              "marginTop": 8,
              "maxWidth": "100%",
              "overflow": "hidden",
            }
          }
        >
          <Image
            accessibilityLabel="/"
            alt="/"
            dataSet={{}}
            onError={[Function]}
            source={
              {
                "uri": "string",
              }
            }
            style={
              {
                "height": 256,
                "maxWidth": "100%",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaProvider>
`;
